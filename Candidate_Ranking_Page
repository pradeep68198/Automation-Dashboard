package com.JE.Pages;

import java.io.IOException;
import java.util.List;
import java.util.Map.Entry;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;

import com.JE.Utilities.General_Wrapper;

public class Candidate_Ranking_Page extends General_Wrapper{
	
	
    public By Create_New_CR=By.xpath("//span[text()='Create New Candidate Ranking']");
    public By Existing_CR=By.xpath("//span[text()='Existing Candidate Rankings']");
    public By Contine_Button=By.xpath("//button[text()='Continue']");
    public By New_CR_Dept_dropdown=By.xpath("//label[text()='Department']/following-sibling::div/angular2-multiselect/div/div[1]/div");
    public By New_CR_Dept_search=By.xpath("//label[text()='Department']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
    public By New_CR_Dept_select=By.xpath("//label[text()='Department']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
    
    public By Dept_Name=By.xpath("//td[text()='Department Name']/following-sibling::td");
    
    public By Position_Details=By.linkText("Position Details");
    public By Performance_Criteria=By.linkText("Performance Criteria");
    public By Position_Candidates_Ranking=By.linkText("Position Candidates and Ranking");
    public By Selection_Decision_Details=By.linkText("Selection Decision Details");
    public By Additional_Information=By.linkText("Additional Information");
    public By Candidate_Not_Within_Department =By.linkText("Candidate Not Within Department");
    
    public By Submit_Button=By.xpath("//button[text()='Submit']");
    
    public By Position_Available=By.name("NumberOfPositionsAvailable");
    public By Date_JE=By.xpath("//label[text()='Effective Date of Job Elimination']/following-sibling::div/input");
    
    public By Position_Title_dropdown=By.xpath("//label[text()='Position Title']/following-sibling::div/angular2-multiselect/div/div/div");
    public By Position_Title_search=By.xpath("//label[text()='Position Title']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
    public By Position_Title_select=By.xpath("//label[text()='Position Title']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
    
    public By Work_Location_dropdown=By.xpath("//label[text()='Work Location']/following-sibling::div/angular2-multiselect/div/div/div");
    public By Work_Location_search=By.xpath("//label[text()='Work Location']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
    public By Work_Location_select=By.xpath("//label[text()='Work Location']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
    
    public By Work_Location_value=By.xpath("//label[text()='Work Location']/following-sibling::div/angular2-multiselect/div/div[1]/div/span[1]/span");
                                                     
    
    public By Business_Rationale=By.name("businessRationale");
    public By criteria1=By.name("criteria1");
    public By Decision_Summary=By.name("decisionSummery");
    
    public By Reviewed_By_dropdown=By.xpath("//label[text()='Documentation To Be Reviewed By']/following-sibling::div/angular2-multiselect/div/div/div");
    public By Reviewed_By_search=By.xpath("//label[text()='Documentation To Be Reviewed By']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
    public By Reviewed_By_select=By.xpath("//label[text()='Documentation To Be Reviewed By']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
    
    public By Success_message=By.xpath("//div[contains(text(),'Candidate Ranking Request Successfully')]");
    
    
       public void Create_New_CR_Action(){
    	
	    Click(Create_New_CR,"Create_New_CR");
 	
       }
	    
	    
	    public void Existing_CR_Action(){
	    	
	    	 Click(Existing_CR,"Existing_CR");
	    	
	    }
	    
	    public void Contine_Button_Action(){
	    	
	    	 Click(Contine_Button,"Contine_Button");
	    	
	    }
	    
	    public void Submit_Button_Action(){
	    	
	    	 Click(Submit_Button,"Submit_Button");
	    	
	    }
	    
	    
	    
	    public void New_CR_Dept_search_Action(String value){
	    	 Click(New_CR_Dept_dropdown,"New_CR_Dept_dropdown");
	    	
	    	enterText(New_CR_Dept_search,value,"New_CR_Dept_search");
	    	 Click(New_CR_Dept_select,"New_CR_Dept_select");
	    	
	    }
	    
	  
	    
	    
	    public void Position_Details_Action(){
	    	
	    	 Click(Position_Details,"Position_Details");
	    	
	    }
	    
	    public void Candidate_Not_Within_Department_Action(){
	    	
	    	 Click(Candidate_Not_Within_Department,"Candidate_Not_Within_Department");
	    	
	    }
	    
	    
	    public void Performance_Criteria_Action(){
	    	
	    	 Click(Performance_Criteria,"Performance_Criteria");
	    	
	    }
	    
	    
	    public void Position_Candidates_Ranking_Action(){
	    	
	    	 Click(Position_Candidates_Ranking,"Position_Candidates_Ranking");
	    	
	    }
	    
	    
	    public void Selection_Decision_Details_Action(){
	    	
	    	 Click(Selection_Decision_Details,"Selection_Decision_Details");
	    	
	    }
	    
	    
	    public void Additional_Information_Action(){
	    	
	    	 Click(Additional_Information,"Additional_Information");
	    	
	    }
	    
	    
        public void Position_Available_Action(String value){
	    	
	    	enterText(Position_Available,value,"Position_Available");
	    	
	    }
        
        
        public void Date_JE_Action(String value){
	    	
	    	enterText(Date_JE,value,"Date_JE");
	    	
	    }
        
        public void Business_Rationale_Action(String value){
	    	
	    	enterText(Business_Rationale,value,"Business_Rationale");
	    	
	    }
        
        
        public void criteria1_Action(String value){
	    	
	    	enterText(criteria1,value,"criteria1");
	    	
	    }
        
      public void Decision_Summary_Action(String value){
	    	
	    	enterText(Decision_Summary,value,"Decision_Summary");
	    	
	    }
      
      public String Work_Location_Action(String value){
    	  
    	  Click(Work_Location_dropdown,"Work_Location_dropdown");
	    	
	    	enterText(Work_Location_search,value,"Work_Location_search");
	    	
	    	 Click(Work_Location_select,"Work_Location_select");
	    	 String val=driver.findElement(Work_Location_value).getText();
	    	 
	    	 return val;
	    			 
	    			 
	    	
	    }
      
      
 public void Position_Title_Action(String value){
    	  
    	  Click(Position_Title_dropdown,"Position_Title_dropdown");
	    	
	    	enterText(Position_Title_search,value,"Position_Title_search");
	    	
	    	 Click(Position_Title_select,"Position_Title_select");
	    	
	    }
 
 
 public void Reviewed_By_Action(String value){
	  
	  Click(Reviewed_By_dropdown,"Reviewed_By_dropdown");
   	
   	enterText(Reviewed_By_search,value,"Reviewed_By_search");
   	
   	 Click(Reviewed_By_select,"Reviewed_By_select");
   	
   }
 
 
    public void Adding_candidate_Within_Dept(String value,String rank_val,String Deci) throws InterruptedException, IOException{
    	
    	String[] Number=value.split(",");
    	String[] Rank=rank_val.split(",");
    	String[] Decision=Deci.split(",");
    	
    	for(int i=0;i<Number.length;i++) {
    		
    		driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[1]/div")).click();
    		Thread.sleep(1000);
    		driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/div/input")).sendKeys(Number[i]);
    		Thread.sleep(1000);
    		driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]")).click();
    		Thread.sleep(3000);
    		driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[3]/div/div/input")).sendKeys(Rank[i]);
    		
    		
    		String Name=driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[1]/div/span[1]/span")).getText();
    		
    		String title=getTextAt("#withinDepartInfo > div > div:nth-child("+(i+1)+") >  div:nth-child(2) > div > div:nth-child(2) > div:nth-child(1) > div > div > input");
    		
    		String EP=getTextAt("#withinDepartInfo > div > div:nth-child("+(i+1)+") >  div:nth-child(2) > div > div:nth-child(3) > div > div > div.col-lg-6.col-md-5.d-inline-block.p-0 > div > div > input");
    		Candidate_ID.add(Number[i]);
    		Candidate_Emp_Name.put(Number[i], Name);
    		Candidate_Job_Title.put(Number[i], title);
    		Candidate_Eligible_Plan.put(Number[i], EP);
    		Candidate_Ranking.put(Number[i],Rank[i]);
    		Candidate_Decision.put(Number[i],Decision[i]);
    		String type=Find_Sev_Non_Sev(Number[i]);
    		Candidate_Type.put(Number[i], type);
    		
    		if(i<Number.length-1) {
    			
    			driver.findElement(By.xpath("//*[@id='withinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[3]/div/div/div[2]/div/div/button[1]")).click();
    			
    			Thread.sleep(3000);
    			
    		}
    		
    		
    		
    	}
	 
	 
 }
    
    
public void Adding_candidate_NOTWithin_Dept(String value,String rank_val,String Deci) throws InterruptedException, IOException{
    	
    	String[] Number=value.split(",");
    	String[] Rank=rank_val.split(",");
    	String[] Decision=Deci.split(",");
    	
    	for(int i=0;i<Number.length;i++) {
    		
    		driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[1]/div")).click();
    		Thread.sleep(1000);
    		driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/div/input")).sendKeys(Number[i]);
    		Thread.sleep(1000);
    		

	    	for(int j=0;j<=10;j++) {
	    	driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/div/input")).sendKeys(Keys.ENTER);
	    	Thread.sleep(2000);
	    	if(!(isElementPresent(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[2]")))) {
	    		break;
	    	
	    	}
	    	Thread.sleep(2000);
	    	}
    		
    		driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]")).click();
    		Thread.sleep(3000);
    		driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[3]/div/div/input")).sendKeys(Rank[i]);
    		
    		
    		String Name=driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[1]/div[1]/div/div/angular2-multiselect/div/div[1]/div/span[1]/span")).getText();
    		
    		String title=getTextAt("#notinDepartInfo > div > div:nth-child("+(i+1)+") >  div:nth-child(2) > div > div:nth-child(2) > div:nth-child(1) > div > div > input");
    		
    		String EP=getTextAt("#notinDepartInfo > div > div:nth-child("+(i+1)+") >  div:nth-child(2) > div > div:nth-child(3) > div > div > div.col-lg-6.col-md-5.d-inline-block.p-0 > div > div > input");
    		Candidate_ID.add(Number[i]);
    		Candidate_Emp_Name.put(Number[i], Name);
    		Candidate_Job_Title.put(Number[i], title);
    		Candidate_Eligible_Plan.put(Number[i], EP);
    		Candidate_Ranking.put(Number[i],Rank[i]);
    		Candidate_Decision.put(Number[i],Decision[i]);
    		String type=Find_Sev_Non_Sev(Number[i]);
    		Candidate_Type.put(Number[i], type);
    		
    		if(i<Number.length-1) {
    			
    			driver.findElement(By.xpath("//*[@id='notinDepartInfo']/div/div["+(i+1)+"]/div[2]/div/div[3]/div/div/div[2]/div/div/button[1]")).click();
    			
    			Thread.sleep(3000);
    			
    		}
    		
    		
    		
    	}
	 
	 
 }


   public void Adding_candidate_Decision_Detail() throws InterruptedException{
	   
	   List<WebElement> val=driver.findElements(By.xpath("//*[@id='selectionInfo']/div/table/tbody/tr"));
	   
	   for(int i=1;i<=val.size();i++) {
		   
		   String name=driver.findElement(By.xpath("//*[@id='selectionInfo']/div/table/tbody/tr["+i+"]/td[2]")).getText();
		   String ID = null;
		   
		   for (Entry<String, String> entry : Candidate_Emp_Name.entrySet()) {
	            if (entry.getValue().equals(name)) {
	            	ID=entry.getKey();
	            	break;
	            }
	        }
		   
		   if(Candidate_Decision.get(ID).equalsIgnoreCase("Yes")) {
			   
			   driver.findElement(By.xpath("//*[@id='selectionInfo']/div/table/tbody/tr["+i+"]/td[3]/div/label[1]")).click();
			   
			   
		   }
		   
	   }
	   
	   
	
	
}
   
   public String Success_message_Action(){
   	
   	
       String text=Get_Text(Success_message,"Success_message");
       
       String[] value=text.split("-");
   	
   	return value[1].trim();
	
      }
   
   
   public String Dept_name_Action(){
   	
   	String val=Get_Text(Dept_Name,"Dept Name");
   	
   	return val;
   	
   }
   
   
   public String Find_Sev_Non_Sev(String emp) throws IOException {
		
		String[][] data=readXLSX(Rules_Book,"Emp_Details");
		
		
	     String Emp_Type = null;
	    
		
		for(int i=1;i<data[0].length;i++){
		
		 if(data[0][i].equalsIgnoreCase(emp)){
			  
			
			 Emp_Type=data[5][i];
				 break;
				 	 
		 }	 
		 
		}
		
		
		
		return Emp_Type;
		
		
		
		
	}



 
 
 


}
