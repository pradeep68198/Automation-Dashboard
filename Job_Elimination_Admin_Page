package com.JE.Pages;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;

import com.JE.Utilities.General_Wrapper;

public class Job_Elimination_Admin_Page extends General_Wrapper{
	
	public By Emp_id=By.name("candidateId");
    public By Search_Button=By.xpath("//button[text()='Search']");
    public By Existing_JE=By.xpath("//span[text()='Existing Job Elimination Transactions']");
    public By Create_JE=By.xpath("//span[text()='Create New Job Elimination Transaction']");
    public By JE_Admin_Summary=By.xpath("//*[@id='DataTables_Table_0']/tbody/tr/td");
    
    public By wait=By.xpath("//*[@id='DataTables_Table_0']/tbody/tr/td[5]");
    
    public By Button_Edit=By.xpath("//*[@id='DataTables_Table_0']/tbody/tr/td[8]/button");
    
    public By Popup_display=By.xpath("//*[@id='page-top']/modal-container/div/div/div/h5");
    
    public String Waiver_Due_Date="input[name=\"WaiverDueDate\"]";
    public String Final_Term_Date="input[name=\"FinalTerminationDate\"]";
    public String Severance_Start_Date="input[name=\"SeveranceStartDate\"]";
    public String Severance_End_Date="input[name=\"SeveranceEndDate\"]";
    public String Enhanced_Start_date="input[name=\"SecondSalaryContinuationStartDate\"]";
    public String Enhanced_End_date="input[name=\"SecondSalaryContinuationEndDate\"]"; 
    public String Emp_Name="input[name=\"employeename\"]";
    public String Manager_Name="input[name=\"managername\"]";
    public String Manager_ID="input[name=\"manager\"]";
    public String Emp_ID="input[name=\"aetnaId\"]";
    public String Start_date="input[name=\"SalaryContinuationStartDate\"]";
    public String End_date="input[name=\"SalaryContinuationEndDate\"]";
    public String Work_Flow="input[name=\"workflowStatus\"]";
    
    public By Waiver_Status=By.xpath("//label[text()='Waiver Status']/following-sibling::div/angular2-multiselect/div/div/div/span/span");
    public By Waiver_Signed_Date=By.xpath("//label[text()='Waiver Signed Date']/following-sibling::div/div/input");
    
    public By Submit_Button=By.xpath("//button[text()='Submit']");
    public By yes_Button=By.xpath("//button[text()='Yes']");
   
    
    public By  Aetna_Specific_Details=By.linkText("Aetna-Specific Details");
    public By  Job_Elimination_Details=By.linkText("Job Elimination Details");
    
    
  
    
    
    public By Rehired_Yes=By.xpath("//label[text()='Rehired within Job Elimination']/following-sibling::div/div/div/label[1]");
    
    public By Rehired_No=By.xpath("//label[text()='Rehired within Job Elimination']/following-sibling::div/div/div/label[2]");
    
   public By Negotiated_Yes=By.xpath("//label[text()='Negotiated Departure']/following-sibling::div/div/label[1]");
    
    public By Negotiated_No=By.xpath("//label[text()='Negotiated Departure']/following-sibling::div/div/label[2]");
  
    
    
    public void Search_Button_Action(){
       	
   	    Click(Search_Button,"Search_Button");
   	  
    	
          }
    
    public void Existing_JE_Action(){
    	
   	 Click(Existing_JE,"Existing_JE");
   	
   }
   
    
    public void Rehired_Yes_Action(){
         	
   	    Click(Rehired_Yes,"Rehired_Yes");
   	  
    	
          }
    
    public void Rehired_No_Action(){
     	
   	    Click(Rehired_No,"Rehired_No");
   	  
    	
          }
    
    
    public void Negotiated_Yes_Action(){
     	
   	    Click(Negotiated_Yes,"Negotiated_Yes");
   	  
    	
          }
    
    public void Submit_action() throws InterruptedException {
  	 
		  
		  Click(Submit_Button,"Submit_Button");
 	   
  	  
    }
    
    public void Negotiated_No_Action(){
     	
   	    Click(Negotiated_No,"Negotiated_No");
   	  
    	
          }
    
    
    public void Emp_id_Action(String value) throws InterruptedException{
    	
    	if(isElementPresent(Create_JE)) {
    		Existing_JE_Action();
    	}
    	
    	enterText(Emp_id,value,"Emp_id");
    	
    }
    
     public void Waiver_Signed_Date_Action(String value){
    	
    	enterText(Waiver_Signed_Date,value,"Waiver_Signed_Date");
    	
    }
    
    
    public String[] JE_Admin_Summary_Action() throws InterruptedException{
    	   
   	        String[] text=new String[7];
   	        
   	        //waitForElement(JE_Admin_Summary,"JE_Admin_Summary");
   	        
   	       waitForElement(wait,"JE_Admin_Summary");
   	        
   	        //Thread.sleep(4000);
	    	
	    	List<WebElement> val=driver.findElements(JE_Admin_Summary);
	    	
	    	for(int i=0;i<7;i++) {
	    		
	    		text[i]=val.get(i).getText().trim();
	    	}
	    	
	    	
	    	return text;
	    }
    
         public void Button_Edit_Action(){
       	
   	    Click(Button_Edit,"Button_Edit");
   	  
    	
          }
         
         public void Job_Elimination_Details_Action(){
            	
        	    Click(Job_Elimination_Details,"Job_Elimination_Details");
        	  
         	
               }
         
         
         
         public void Popup_display_Action(){
            	
        	 waitForElement(Popup_display,"Popup_display");
        	  
         	
               }
         
         public String Waiver_Due_Date_Action(){
 	    	
    	     String Text=getTextAt(Waiver_Due_Date);
      	     return Text.trim();
	    	
	    }
         
         public String Final_Term_Date_Action(){
  	    	
    	     String Text=getTextAt(Final_Term_Date);
      	     return Text.trim();
	    	
	    }
         
         public void Aetna_Specific_Details_Action(){
        	 
        	  JavascriptExecutor js = (JavascriptExecutor) driver;
        	  js.executeScript("window.scrollBy(0,250)", "");
            	
        	    Click(Aetna_Specific_Details,"Aetna_Specific_Details");
        	  
         	
               }
         
         public String Severance_Start_Date_Action(){
  	    	
    	     String Text=getTextAt(Severance_Start_Date);
      	     return Text.trim();
	    	
	    }
         
         public String Enhanced_Start_date_Action(){
  	    	
    	     String Text=getTextAt(Enhanced_Start_date);
      	     return Text.trim();
	    	
	    }
         
         public String Enhanced_End_date_Action(){
   	    	
    	     String Text=getTextAt(Enhanced_End_date);
      	     return Text.trim();
	    	
	    }
         
         public String Severance_End_Date_Action(){
  	    	
    	     String Text=getTextAt(Severance_End_Date);
      	     return Text.trim();
	    	
	    }
         
         public String Start_date_Action(){
   	    	
    	     String Text=getTextAt(Start_date);
      	     return Text.trim();
	    	
	    }
         
         public String End_date_Action(){
    	    	
    	     String Text=getTextAt(End_date);
      	     return Text.trim();
	    	
	    }
         
         public String Emp_Name_Action(){
    	    	
    	     String Text=getTextAt(Emp_Name);
      	     return Text.trim();
	    	
	    }
         
         public String Manager_Name_Action(){
    	    	
    	     String Text=getTextAt(Manager_Name);
      	     return Text.trim();
	    	
	    }
         
         
         public String Manager_ID_Action(){
 	    	
    	     String Text=getTextAt(Manager_ID);
      	     return Text.trim();
	    	
	    }
         
         public String Emp_ID_Action(){
    	    	
    	     String Text=getTextAt(Emp_ID);
      	     return Text.trim();
	    	
	    }
         
         public String Work_Flow_Action(){
  	    	
    	     String Text=getTextAt(Work_Flow);
      	     return Text.trim();
	    	
	    }
         
         public String Waiver_Status_Action(){
   	    	
    	     String Text=Get_Text(Waiver_Status,"Waiver_Status");
      	     return Text.trim();
	    	
	    }
    
    

}
