package com.FMS.Pages;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;

import com.FMS.Utilities.General_Wrapper;



public class Report_Page extends General_Wrapper{
	
	   
	  
	    public By Search_Button=By.xpath("//button[text()='Search']");
	    public By Download=By.xpath("//button[text()='Download to CSV']");
	    
	    public By Cost_Center_dropdown=By.xpath("//label[text()='Cost Center']/following-sibling::div/angular2-multiselect/div/div[1]/div");
	    public By Cost_Center_search=By.xpath("//label[text()='Cost Center']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
	    public By Cost_Center_select=By.xpath("//label[text()='Cost Center']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
	    public By Cost_Center_select1=By.xpath("//label[text()='Cost Center']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[2]");
	    
	    public By Named_Dept=By.xpath("//label[text()=' Named Department Only ']");
	    public By Span_Control=By.xpath("//label[text()=' Span of Control']");
	    
	    public By Report_Type_dropdown=By.xpath("//label[text()='Report Type']/following-sibling::div/angular2-multiselect/div/div[1]/div");
	    public By Report_Type_search=By.xpath("//label[text()='Report Type']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
	    public By Report_Type_select=By.xpath("//label[text()='Report Type']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
	    
	    public By Pay_Cycle_Period_dropdown=By.xpath("//label[text()='Pay Cycle Period']/following-sibling::div/angular2-multiselect/div/div[1]/div");
	    public By Pay_Cycle_Period_search=By.xpath("//label[text()='Pay Cycle Period']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
	    public By Pay_Cycle_Period_select=By.xpath("//label[text()='Pay Cycle Period']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
	   
	    
	    public By Month_dropdown=By.xpath("//label[text()='Month']/following-sibling::div/angular2-multiselect/div/div[1]/div");
	    public By Month_search=By.xpath("//label[text()='Month']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/div/input");
	    public By Month_select=By.xpath("//label[text()='Month']/following-sibling::div/angular2-multiselect/div/div[2]/div[3]/ul/span/li[1]");
	   
	    public By Start_Date=By.xpath("//label[text()='Start Date']/following-sibling::div/input");
	    public By End_Date=By.xpath("//label[text()='End Date']/following-sibling::div/input");
	    
	    public By Date_Range=By.xpath("//label[text()=' Date Range ']");
	    public By Month=By.xpath("//label[text()=' Month']");
	    public By Pay_Cycle=By.xpath("//label[text()=' Pay Cycle']");
	    public By wait=By.xpath("//*[@id='DataTables_Table_0']/tbody/tr/td[3]");
	    
	    
	    public void Named_Dept_Action(String value){
	    	
	    	if(value.contains("Named Department Only")) {
	    	
		    Click(Named_Dept,"Named_Dept");
	    	}
	    	else {
	    		 Click(Span_Control,"Span_Control");
	    	}
	 	
	       }
	    
 
		    
	    
public void Date_Range_Action(String value){
	
	if(value.contains("Date Range")) {
	    	
		    Click(Date_Range,"Date_Range");
	}
	
	if(value.contains("Month")) {
    	
		 Click(Month,"Month");
}
	
	if(value.contains("Pay Cycle")) {
    	
		Click(Pay_Cycle,"Pay_Cycle");
}
	 	
	       }




		   
		    public void Search_Button_Action(){
		    	
		    	 Click(Search_Button,"Search_Button");
		    	
		    }
		    
		    
		    public void Start_Date_Action(String value){
		    	
		    	enterText(Start_Date,value,"Start_Date");
		    	
		    }
	        
	        
		    
		    public void End_Date_Action(String value){
		    	
		    	 Click(End_Date,"End_Date");
		    	
		    	enterText(End_Date,value,"End_Date");
		    	
		    }
		    
		    
		    public void Cost_Center_dropdown_Action(String value) throws InterruptedException{
		    
		    	   Click(Cost_Center_dropdown,"Cost_Center_dropdown");
			       enterText(Cost_Center_search,value,"Cost_Center_search");
			       for(int i=0;i<=10;i++) {
				    	driver.findElement(Cost_Center_search).sendKeys(Keys.ENTER);
				    	Thread.sleep(2000);
				    	if(!(isElementPresent(Cost_Center_select1))) {
				    		break;
				    	
				    	}
				    	Thread.sleep(2000);
				    	}
			       Click(Cost_Center_select,"Cost_Center_select");
	
		    }
		    
		    public void Report_Type_dropdown_Action(String value){
		    	
		    	 Click(Report_Type_dropdown,"Report_Type_dropdown");
			     enterText(Report_Type_search,value,"Report_Type_search");
			     Click(Report_Type_select,"Report_Type_select");
		    	
		    }
		    
		    public void Pay_Cycle_Period_Action(String value){
		    	
		    	 Click(Pay_Cycle_Period_dropdown,"Pay_Cycle_Period_dropdown");		    	
			     enterText(Pay_Cycle_Period_search,value,"Pay_Cycle_Period_search");			    	
			     Click(Pay_Cycle_Period_select,"Pay_Cycle_Period_select");
		    	
		    }
		    
		    
		    public String Download_Action(String file_name) throws InterruptedException{
		    	
		    	 String val="";
		         waitForElement(wait,"wait for search result");
		 		
		       	 Click(Download,"Download");
		       	 Thread.sleep(15000);
		       	 
		       	String name="";
		      	  File folder = new File(Download_Path);
		        File[] listOfFiles = folder.listFiles();
		          
		                   for(int i=0;i<listOfFiles.length;i++) {	 
		                    name=listOfFiles[i].getName();
		   	              
		                 if(name.contains(file_name)) {
		   	    	  val=Download_Path+name;
		   	    	  System.out.println(val); 
		   	    	  break;
		                 }
		                 
		   	    	  
		                   }
		       	 
		       	 
		       	  return val;
		       	
		    	
		    }
		    
		    
		    

}
